@model WootrixV2.Models.UserViewModel


@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Create"];
    Layout = "~/Views/Shared/_LayoutCompany.cshtml";
    var _type = Context.Session.GetString("ManageType");
}

@section Scripts {
    @*https://www.pluralsight.com/guides/asp-net-mvc-populating-dropdown-lists-in-razor-views-using-the-mvvm-design-pattern-entity-framework-and-ajax*@
    <script type="text/javascript">


$("#Countries").change(function () {
    var selectedCountry = $("#Countries").val();
    var regionsSelect = $("#States");
    regionsSelect.empty();
    var citySelect = $("#Cities");
    citySelect.empty();
    if (selectedCountry != null && selectedCountry != "") {
        $.getJSON('@Url.Action("GetStates")', { countryCode: selectedCountry }, function (states) {

            if (states != null && !jQuery.isEmptyObject(states))
            {
                regionsSelect.append($('<option/>', {
                    value: null,
                    text: ""
                }));
                $.each(states, function (index, state) {

                    regionsSelect.append($("<option />").val(this.value).text(this.text));
                });
            }
        });
    }
});


$("#States").change(function () {
    var selectedState = $("#States").val();
    var citySelect = $("#Cities");
    citySelect.empty();
    if (selectedState != null && selectedState != "") {
        $.getJSON('@Url.Action("GetCities")', { stateCode: selectedState }, function (cities) {
            if (cities != null && !jQuery.isEmptyObject(cities)) {
                citySelect.append($("<option />", {
                    value: null,
                    text: ""
                }));
                $.each(cities, function (index, city) {
                    citySelect.append($("<option />").val(this.value).text(this.text));
                });
            }
        });
    }
});
    </script>

}

<div class="bodyBox">
    <h2 style="color:@Context.Session.GetString("CompanyMainFontColor") !important">@Localizer["Create"]</h2>

    <h4 style="color:@Context.Session.GetString("CompanyMainFontColor") !important">@Localizer["User"]</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">

            <form asp-action="Create" enctype="multipart/form-data">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="EmailAddress" class="control-label"></label>
                    <input asp-for="EmailAddress" class="form-control" />
                    <span asp-validation-for="EmailAddress" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="control-label"></label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                @if (_type != "User")
                {
                <div class="form-group">
                    @Html.LabelFor(x => Model.Categories, htmlAttributes: new { @class = "control-label" })


                    <select class="form-control" id="Departments" name="Categories">
                        @foreach (var i in Model.Departments)
                        {
                            <option value="@i.Value">@Localizer[i.Text]</option>
                        }
                    </select>
                    @*@Html.DropDownListFor(x => Model.Categories, new SelectList(Model.Departments, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Departments" })*@
                    @Html.ValidationMessageFor(x => x.Categories, "", new { @class = "text-danger" })

                </div>
                }
                <div class="form-group">
                    <label asp-for="PhoneNumber" class="control-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => Model.Gender, htmlAttributes: new { @class = "control-label" })
                    <select class="form-control" id="Genders" name="Gender">
                        @foreach (var i in Model.Genders)
                        {
                            <option value="@i.Text">@Localizer[i.Text]</option>
                        }
                    </select>
                    @*@Html.DropDownListFor(x => Model.Gender, new SelectList(Model.Genders, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Genders" })*@
                    @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label asp-for="Photo" class="control-label"></label>
                    <input asp-for="Photo" type="file" class="form-control" />
                    <span asp-validation-for="Photo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => Model.InterfaceLanguage, htmlAttributes: new { @class = "control-label" })

                    <select class="form-control" id="InterfaceLanguages" name="InterfaceLanguage">
                        @foreach (var i in Model.InterfaceLanguages)
                        {
                            <option value="@i.Value">@Localizer[i.Text]</option>
                        }
                    </select>
                    @*@Html.DropDownListFor(x => Model.InterfaceLanguage, new SelectList(Model.InterfaceLanguages, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "InterfaceLanguages" })*@
                    @Html.ValidationMessageFor(x => x.InterfaceLanguage, "", new { @class = "text-danger" })


                    @*<select class="form-control" id="InterfaceLanguages" name="InterfaceLanguage">
                            <option value="Portuguese">Portuguese</option>
                            <option value="Spanish">Spanish</option>
                            <option value="English">English</option>
                        </select>*@
                </div>

                @if (_type == "User")
                {


                    @Html.LabelFor(x => Model.Groups, htmlAttributes: new { @class = "control-label" })
                    <div class="form-group checkbox-box">

                        @foreach (var item in Model.AvailableGroups)
                        {
                            <div class="checkbox">
                                <label><input type="checkbox" name="SelectedGroups" value="@item.Value">@item.Text</label>
                            </div>
                        }
                    </div>



                    @Html.LabelFor(x => Model.Topics, htmlAttributes: new { @class = "control-label" })
                    <div class="form-group checkbox-box">

                        @foreach (var item in Model.AvailableTopics)
                        {
                            <div class="checkbox">
                                <label><input type="checkbox" name="SelectedTopics" value="@item.Value">@item.Text</label>
                            </div>
                        }
                    </div>



                    @Html.LabelFor(x => Model.TypeOfUser, htmlAttributes: new { @class = "control-label" })
                    <div class="form-group checkbox-box">

                        @foreach (var item in Model.AvailableTypeOfUser)
                        {
                            <div class="checkbox">
                                <label><input type="checkbox" name="SelectedTypeOfUser" value="@item.Value">@item.Text</label>
                            </div>
                        }
                    </div>



                    @Html.LabelFor(x => Model.WebsiteLanguage, htmlAttributes: new { @class = "control-label" })
                    <div class="form-group checkbox-box">

                        @foreach (var item in Model.AvailableLanguages)
                        {
                        <div class="checkbox">
                            <label><input type="checkbox" name="SelectedLanguages" value="@item.Value">@Localizer[item.Text]</label>
</div>
                        }
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(x => Model.Country, htmlAttributes: new { @class = "control-label" })

                        <select class="form-control" id="Countries" name="Country">
                            @foreach (var i in Model.Countries)
                            {
                                <option value="@i.Value">@Localizer[i.Text]</option>
                            }
                        </select>
                        @*@Html.DropDownListFor(x => Model.Country, new SelectList(Model.Countries, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Countries" })*@
                        @Html.ValidationMessageFor(x => x.Country, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => Model.State, htmlAttributes: new { @class = "control-label" })
                        <select class="form-control" id="States" name="State">
                            @foreach (var i in Model.States)
                            {
                                <option value="@i.Value">@Localizer[i.Text]</option>
                            }
                        </select>
                        @*@Html.DropDownListFor(x => Model.State, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "States" })*@
                        @Html.ValidationMessageFor(x => x.State, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => Model.City, htmlAttributes: new { @class = "control-label" })
                        <select class="form-control" id="Cities" name="City">
                            @foreach (var i in Model.Cities)
                            {
                                <option value="@i.Value">@Localizer[i.Text]</option>
                            }
                        </select>
                        @*@Html.DropDownListFor(x => Model.City, new SelectList(Model.Cities, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Cities" })*@
                        @Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
                    </div>
                }
                <div class="form-group">
                    <input type="submit" value="@Localizer["Create"]" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index" asp-route-id="@_type">@Localizer["Back to List"]</a>
    </div>

</div>