@model IEnumerable<WootrixV2.Models.SegmentArticle>


@using System.Net
@using Microsoft.AspNetCore.Identity
@using WootrixV2.Data

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = @Localizer["Article List"];
    Layout = "~/Views/Shared/_LayoutCompany.cshtml";

    var _companyName = UserManager.GetUserAsync(User).GetAwaiter().GetResult().companyName;
}


<div class="articleBackButtonContainer">
    <a asp-controller="Company" asp-action="Home" asp-route-id="@_companyName">
        <button class="articleBackButton button">
            <span class="glyphicon glyphicon-menu-left"></span>
            @Localizer["Back to Admin Menu"]
        </button>
    </a>
</div>

<div class="bodyBox">
    <h2>@Localizer["Article List"]</h2>

    <p>
        <a asp-action="Create">@Localizer["Create New"]</a>
    </p>
    <table class="table">
        <thead>
            <tr>


                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmbeddedVideo)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.PublishFrom)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PublishTill)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Tags)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AllowComments)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Segments)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Groups)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Topics)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TypeOfUser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Languages)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.City)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

                <tr>


                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @{
                            var fn = _companyName + "_" + WebUtility.HtmlEncode(item.Title) + "_" + item.Image;



                        }
                        <img src="~/images/Uploads/Articles/@fn" class="tableimg" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmbeddedVideo)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PublishFrom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PublishTill)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Tags)
                    </td>
                    <td>
                        @Localizer[item.AllowComments.ToString()]
                        @*@Html.DisplayFor(modelItem => item.AllowComments)*@
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>

                    <td>
                        @if (!string.IsNullOrEmpty(item.Segments))
                        {
                            if (item.Segments.Contains("|"))
                            {
                                var e = item.Segments.Replace("|", ", ");
                                <q>@e</q>
                            }
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Segments)
                        }
                        @*@Html.DisplayFor(modelItem => item.Segments)*@
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Groups))
                        {
                            if (item.Groups.Contains("|"))
                            {
                                var e = item.Groups.Replace("|", ", ");
                                <q>@e</q>
                            }
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Groups)
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.Topics))
                        {
                            if (item.Topics.Contains("|"))
                            {
                                var e = item.Topics.Replace("|", ", ");
                                <q>@e</q>
                            }
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.Topics)
                        }
                    </td>
                    <td>
                        @{

                            if (!string.IsNullOrEmpty(item.TypeOfUser))
                            {
                                if (item.TypeOfUser.Contains("|"))
                                {
                                    var e = item.TypeOfUser.Replace("|", ", ");
                                    <q>@e</q>
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.TypeOfUser)
                            }
                        }
                    </td>
                    <td>


                        @{
                            //Split the languages and localise
                            if (!string.IsNullOrEmpty(item.Languages))
                            {
                                if (item.Languages.Contains("|"))
                                {
                                    string[] langs = item.Languages.Split("|"); ;

                                    foreach (string la in langs)
                                    {
                                        @Localizer[la ?? ""]<q>@(langs.Last() == la ? " " : ", ")</q>;

                                    }
                                }
                                else
                                {
                                    @Localizer[item.Languages]
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.Languages)
                            }
                        }
                        @*@Html.DisplayFor(modelItem => item.Languages)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>


                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">@Localizer["Edit"]</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">@Localizer["Details"]</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">@Localizer["Delete"]</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>