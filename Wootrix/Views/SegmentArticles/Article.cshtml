@model WootrixV2.Models.SegmentArticle

@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Http;
@using WootrixV2.Data;
@using System.Net;

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = Localizer["Article"];
    Layout = "~/Views/Shared/_LayoutCompany.cshtml";

    var _companyName = Context.Session.GetString("CompanyName");
    var _SegmentListID = Context.Session.GetInt32("SegmentListID");

}

<script>
        
        _gaq.push(['_setCustomVar',
            3,                // This custom var is set to slot #1.  Required parameter.
            'ArticleName',    // The name of the custom variable.  Required parameter.
            '@WebUtility.HtmlDecode(Model.Title)',        // The value of the custom variable.  Required parameter.
            3                 // Sets the scope to visitor-level.  Optional parameter.
        ]);
</script>

<div class="articleBackButtonContainer">
    <a asp-controller="CompanySegments" asp-action="ArticleList" asp-route-id="@_SegmentListID">
        <button class="articleBackButton button glow"><span class="glyphicon glyphicon-menu-left"></span>&nbsp;@Localizer["Back to Article List"]</button>
    </a>
</div>
<main id="UserView">
    <div class="articleContainer">
        <div class="articleContainerCentred">
            <div class="articleContainerSub">
                <div class="articleBox">
                    <section style="display: block">
                        <div class="article articleDetails">
                            <div>

                                @{
                                    var fn = ViewBag.UploadsLocation + "Articles/" + _companyName + "_" + Model.ID + "_" + Model.Image;
                                }


                                <h1>@WebUtility.HtmlDecode(Model.Title)</h1>

                                @*@if (!string.IsNullOrEmpty(Model.ArticleUrl))
                                    {
                                        //<iframe src="https://www.theguardian.com/international" width="100%" height="600px"></iframe>
                                        //<iframe src="demo_iframe.htm" ></iframe>
                                        <div>
                                            <object type="text/html" data="@Model.ArticleUrl" width="800px" height="600px" style="overflow:auto;border:5px ridge blue"></object>
                                        </div>
                                    }*@
                                @if (!string.IsNullOrEmpty(Model.EmbeddedVideo))
                                {
                                    var moviePath = ViewBag.UploadsLocation + "Articles/" + _companyName + "_" + Model.ID + "_" + Model.EmbeddedVideo;

                                    <div class="embedded-movie">
                                        <video id="articleMovie" src="@Url.Content(moviePath)" controls="true" width="100%" max-height="600" max-width="100%" autoplay="false"></video>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Model.Image))
                                {
                                    <div class="imageStuff">
                                        <img src="@fn" class="UserArticleImage" />
                                    </div>
                                }
                                    <div class="articleContent">
                                        @Html.Raw(WebUtility.HtmlDecode(Model.ArticleContent))
                                       
                                    </div>
                                <div class="publishStuff">
                                    <span class="glyphicon glyphicon-user"></span>
                                    <div class="author">@Localizer["Posted by"] @Model.Author&nbsp;</div><div class="publishDate">@Model.PublishFrom</div>
                                </div>
                                @if (Model.AllowComments ?? false)
                                {
                                    <div class="commentStuff">
                                        <a asp-controller="SegmentArticleComments" asp-action="Index" asp-route-id="@Model.ID">
                                            <span class="glyphicon glyphicon-comment"></span>
                                            <div class="commentCount">@ViewBag.CommentCount &nbsp;</div><div class="commentView">
                                                @Localizer["Comments"]
                                            </div>
                                        </a>
                                    </div>
                                    <div class="commentsList">
                                        @foreach (WootrixV2.Models.SegmentArticleComment com in ViewBag.Comments)
                                        {
                                            // If not a reply
                                            if (string.IsNullOrEmpty(com.ReplyingToCommentID.ToString()))
                                            {
                                                <div class="comment-box">


                                                    <div class="comment-date">@com.CreatedDate</div>
                                                    <div class="comment-person">@com.UserName</div>
                                                    <div class="comment-text">@com.Comment</div>
                                                </div>
                                            }
                                            // If it is a reply
                                            @if (!string.IsNullOrWhiteSpace(com.ReplyingToCommentID.ToString()))
                                            {
                                                <div class="reply-box">
                                                    <div class="comment-person">@Localizer["Reply from Admin:"] @com.UserName</div>
                                                    <div class="comment-text">@com.Comment</div>
                                                </div>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        </div>

                    </section>
                </div>
            </div>
        </div>
    </div>
</main>
<div class="articleBackButtonContainer">
    <a asp-controller="CompanySegments" asp-action="ArticleList" asp-route-id="@_SegmentListID">
        <button class="articleBackButton button glow"><span class="glyphicon glyphicon-menu-left"></span>&nbsp;@Localizer["Back to Article List"]</button>
    </a>
</div>
