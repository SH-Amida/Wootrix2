@model WootrixV2.Models.Company

@{
    ViewData["Title"] = "Wootrix 2.0 Company Home Page";
    Layout = "~/Views/Shared/_LayoutCompany.cshtml";
}
@using Microsoft.AspNetCore.Identity
@using WootrixV2.Data;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="companyHome" company="@Model.CompanyName">
    <!-- Banner -->
    @{
        var imgSrcBack = "";
        var backID = "banner";
        if (Model.CompanyBackgroundImage != null)
        {
            var base64Back = Convert.ToBase64String(Model.CompanyBackgroundImage);
            imgSrcBack = String.Format("data:image/gif;base64,{0}", base64Back);
        }
    }
    <section style="height: 92vh; background-image: url(@imgSrcBack);" alt="Home screen image" class="img-responsive">


        <div class="container clearfix">
            <div class="span7 left">
                <figure class="main-home-image">
                    <!--COMPANY FOCUS IMAGE-->
                    @{
                        var imgSrcFoc = "";
                        if (Model.CompanyFocusImage != null)
                        {
                            var base64Foc = Convert.ToBase64String(Model.CompanyFocusImage);
                            imgSrcFoc = String.Format("data:image/gif;base64,{0}", base64Foc);
                        }
                    }
                    <img src="@imgSrcFoc" id="CompanyFocusImage" alt="Home screen image" />

                </figure>
            </div>
            <div class="span5 right">
                <div class="social-login-cont">
                    <div class="signin-social">
                        <!--COMPANY TEXT MAIN-->
                        <h2 id="CompanyTextMain" style="color:@Model.CompanyMainFontColor !important;">@Html.DisplayFor(modelItem => Model.CompanyTextMain)</h2>
                    </div>
                    <div class="btn-box clearfix">
                        <!--COMPANY TEXT SECONDARY-->
                        <h3 id="CompanyTextSecondary" style="color:@Model.CompanyMainFontColor !important;">@Html.DisplayFor(modelItem => Model.CompanyTextSecondary)</h3>
                    </div>
                    @if (!SignInManager.IsSignedIn(User))
                    {
                        <div class="btn-box clearfix">
                            <a asp-area="Identity" class="register-bttn" asp-page="/Account/Login">Login</a>
                        </div>
                    }
                </div>
            </div>
        </div>


    </section>
    <h2>
        Company home page - Normally this will show a login interface
    </h2>

    <div>
        <!--I'm putting the company attributes in hidden tags so the page can be customised at runtime by js -->
        <!--This is a hacky approach -better to set the company tag at in .Net and create css styles accordingly off that-->
        @*<div id="thisComanyName" val="@Html.DisplayFor(model => model.CompanyName)" style="visibility:hidden"></div>
            <div id="thisCompanyLogoImage" val="@Html.DisplayFor(model => model.CompanyLogoImage)" style="visibility:hidden"></div>
            <div id="thisCompanyBackgroundColor" val="@Html.DisplayFor(model => model.CompanyBackgroundColor)" style="visibility:hidden"></div>
            <div id="thisCompanyBackgroundImage" val="@Html.DisplayFor(model => model.CompanyBackgroundImage)" style="visibility:hidden"></div>
            <div id="thisCompanyFocusImage" val="@Html.DisplayFor(model => model.CompanyFocusImage)" style="visibility:hidden"></div>
            <div id="thisCompanyTextMain" val="@Html.DisplayFor(model => model.CompanyTextMain)" style="visibility:hidden"></div>
            <div id="thisCompanyTextSecondary" val="@Html.DisplayFor(model => model.CompanyTextSecondary)" style="visibility:hidden"></div>
            <div id="thisCompanyHighlightColor" val="@Html.DisplayFor(model => model.CompanyHighlightColor)" style="visibility:hidden"></div>
            <div id="thisCompanyHeaderBackgroundColor" val="@Html.DisplayFor(model => model.CompanyHeaderBackgroundColor)" style="visibility:hidden"></div>
            <div id="thisCompanyMainFontColor" val="@Html.HiddenFor(model => model.CompanyMainFontColor)" style="visibility:hidden"></div>
            <div id="thisCompanyHeaderFontColor" val="@Html.HiddenFor(model => model.CompanyHeaderFontColor)" style="visibility:hidden"></div>*@

        <h4>Details</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.CompanyName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CompanyBackgroundColor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyBackgroundColor)
            </dd>


            <dt>
                @Html.DisplayNameFor(model => model.CompanyTextMain)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyTextMain)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CompanyTextSecondary)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyTextSecondary)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CompanyHighlightColor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyHighlightColor)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CompanyHeaderBackgroundColor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyHeaderBackgroundColor)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CompanyMainFontColor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyMainFontColor)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.CompanyHeaderFontColor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyHeaderFontColor)
            </dd>
        </dl>
    </div>

</div>
